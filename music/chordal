#!/usr/bin/env perl
#
# Templates lilypond chords.

use strict;
use warnings;

use Getopt::Long qw(GetOptions);

my $chord_tmpl = $ENV{CHORDTMPL};

GetOptions( 'help' => \&print_help, 'tmpl=s' => \$chord_tmpl )
  or die "could not parse options\n";
print_help() unless @ARGV;

my %params;
for my $i ( 0 .. $#ARGV ) {
  $params{ 'argv' . ( $i + 1 ) } = $ARGV[$i];
}

( my $output = $chord_tmpl ) =~ s/(\\.)/qq!"$1"!/eeg;
$output .= "\n" unless $output =~ m/ \s$ /x;
$output =~
  s/ \Q%{\E (\w+) \Q}\E / exists $params{$1} ? $params{$1} : q{} /egx;

print $output;
exit 0;

sub print_help {
  warn <<"END_HELP";
Usage: $0 [--tmpl=xxx] "chordspec" ...

Template a lilypond chord, for example

  $ export CHORDTMPL='<%{argv1}>8( q q q q q q q q)'
  $ $0 "c e g"
  <c e g>8( q q q q q q q q)

END_HELP
  exit 64;
}
