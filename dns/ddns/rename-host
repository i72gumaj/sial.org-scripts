#!/bin/sh
#
# Rename A host (and update PTR if possible). Unless the A points to
# multiple records.

DOM=example.edu
KEY=/etc/nsuk.key
MAXWAITSECS=7

[ $# -ne 2 ] && {
  echo >&2 "usage: $0 oldhost newhost"
  exit 64
}

echo $1 $2 | grep $DOM && {
  echo >&2 "$0: use short host names"
  exit 65
}

[ -r $KEY ] || {
  echo >&2 "$0: cannot read nsupdate keyfile $KEY"
  exit 65
}

IP=
for hostip in `dig +short -t A $1.$DOM`; do
  [ $IP ] && {
    echo >&2 "$0: multiple A records for '$1', do not know which to rename"
    exit 65
  }
  IP=$hostip
done

[ -z $IP ] && {
  echo >&2 "$0: no A record found for '$1'"
  exit 68
}

nsupdate -k $KEY -t $MAXWAITSECS <<EOF
prereq yxrrset $1.$DOM A
update delete $1.$DOM A
update add $2.$DOM 86400 A $IP
send
EOF

STATUS=$?
if [ $STATUS -ne 0 ]; then
  echo >&2 "$0: non-zero exit from nsupdate (A not renamed)"
else
  REV=`perl -e 'print join ".", reverse split /[.]/, shift' $IP`

  nsupdate -k $KEY -t $MAXWAITSECS <<EOF_REV
prereq yxrrset $REV.in-addr.arpa. PTR
update delete $REV.in-addr.arpa. PTR
update add $REV.in-addr.arpa 86400 PTR $2.$DOM.
send
EOF_REV

  STATUS=$?
  if [ $STATUS -ne 0 ]; then
    echo >&2 "$0: non-zero exit from nsupdate (PTR not updated)"
    echo >&2 "NOTE: UW-IT may own reverse, check SOA and EE named.conf zones"
  fi
fi
