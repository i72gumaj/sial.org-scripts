#!/usr/bin/env perl
#
# Expands hostnames: lists variations on name for use in SSH
# known_hosts data.

use strict;
use warnings;

use Net::DNS ();
my $dns = Net::DNS::Resolver->new;

END {
  # Report problems when writing to stdout (perldoc perlopentut)
  unless ( close(STDOUT) ) {
    warn "error: problem closing STDOUT: $!\n";
    exit 74;
  }
}

while (<>) {
  chomp;

  my $host = $_;

  my ( @names, @ips, @shortnames, %seen );

  my $query = $dns->search($host);
  if ($query) {
    for my $rr ( $query->answer ) {
      push @names, $rr->name unless $seen{ $rr->name }++;
    }
  }
  @names      = sort @names;
  @shortnames =
    sort map { m/^(.*?)\.[^.]+\.[^.]+$/; $seen{$1}++ ? () : $1 } @names;

  for my $name (@names) {
    for my $ip ( get_ip($name) ) {
      push @ips, $ip unless $seen{$ip}++;
    }
  }

  print join( ',', @names, @shortnames, @ips ), $/;
}

sub get_ip {
  my $host = shift;
  my @ips;

  my $query = $dns->query( $host, 'A' );
  if ($query) {
    for my $rr ( $query->answer ) {
      next unless $rr->type eq 'A';
      push @ips, $rr->address;
    }
  }

  return wantarray ? @ips : $ips[0];
}
